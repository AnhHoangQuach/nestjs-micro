services:
  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    command: npm run start:dev gateway
    ports:
      - '3003:3003'
    depends_on:
      auth:
        condition: service_healthy
      orders:
        condition: service_healthy
      billing:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    environment:
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
      - RABBIT_MQ_AUTH_QUEUE=auth
      - RABBIT_MQ_BILLING_QUEUE=billing
      - RABBIT_MQ_ORDERS_QUEUE=orders
  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    command: npm run start:dev orders
    env_file:
      - ./apps/orders/.env
    depends_on:
      billing:
        condition: service_healthy
      auth:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    environment:
      - MONGODB_URI=mongodb+srv://hoanganh:hoanganh@cluster0.c0lkaku.mongodb.net/orders
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
      - RABBIT_MQ_AUTH_QUEUE=auth
      - RABBIT_MQ_BILLING_QUEUE=billing
  billing:
    build:
      context: .
      dockerfile: ./apps/billing/Dockerfile
      target: development
    command: npm run start:dev billing
    env_file:
      - ./apps/billing/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      auth:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3002:3002'
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    environment:
      - MONGODB_URI=mongodb+srv://hoanganh:hoanganh@cluster0.c0lkaku.mongodb.net/billing
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
      - RABBIT_MQ_AUTH_QUEUE=auth
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    ports:
      - '3001:3001'
    env_file:
      - ./apps/auth/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    environment:
      - PORT=3001
      - MONGODB_URI=mongodb+srv://hoanganh:hoanganh@cluster0.c0lkaku.mongodb.net/auth
      - RABBIT_MQ_URI=amqp://rabbitmq:5672
      - RABBIT_MQ_AUTH_QUEUE=auth
      - JWT_SECRET=yJSDVpxKUQ1LSfrnrsLN6r6tmFd1i95I3zGXjpIryO8zoWg7fDmYEnyyCmtKFh2MFd4c7rFjN9wKsiwRXYKZ9BKJ5YHTByQi8Q4
      - JWT_EXPIRATION=3600
      - NODE_ENV=development
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  app-network:
    driver: bridge
